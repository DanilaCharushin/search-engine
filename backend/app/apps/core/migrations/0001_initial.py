# Generated by Django 3.2.16 on 2022-10-31 13:47

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Link",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
            ],
        ),
        migrations.CreateModel(
            name="Url",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("value", models.TextField(unique=True)),
                ("is_crawled", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Word",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("value", models.TextField(unique=True)),
                ("is_filtered", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="UrlWord",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("location", models.IntegerField()),
                ("url", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core.url")),
                ("word", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core.word")),
            ],
            options={
                "unique_together": {("url", "word")},
            },
        ),
        migrations.AddField(
            model_name="url",
            name="words",
            field=models.ManyToManyField(related_name="urls", through="core.UrlWord", to="core.Word"),
        ),
        migrations.CreateModel(
            name="Run",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("raw_urls", models.TextField(verbose_name="Список url для запуска (через запятую)")),
                ("depth", models.IntegerField(default=2, verbose_name="Глубина обхода")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Дата создания")),
                ("finished_at", models.DateTimeField(blank=True, null=True, verbose_name="Дата завершения")),
                ("urls", models.ManyToManyField(to="core.Url")),
            ],
        ),
        migrations.CreateModel(
            name="PageRank",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("value", models.FloatField()),
                ("url", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core.url")),
            ],
        ),
        migrations.CreateModel(
            name="LinkWord",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("link", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core.link")),
                ("word", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core.word")),
            ],
            options={
                "unique_together": {("link", "word")},
            },
        ),
        migrations.AddField(
            model_name="link",
            name="url_from",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="links_from", to="core.url"
            ),
        ),
        migrations.AddField(
            model_name="link",
            name="url_to",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="links_to", to="core.url"
            ),
        ),
        migrations.AddField(
            model_name="link",
            name="words",
            field=models.ManyToManyField(related_name="links", through="core.LinkWord", to="core.Word"),
        ),
        migrations.AlterUniqueTogether(
            name="link",
            unique_together={("url_from", "url_to")},
        ),
    ]
